# path to a file with pwtool keys, if some encoded passwords are used this must point to a file with
# pwtool keys used to encode the passwords, otherwise it can be commented out
#pwtool_keys_file=${catalina.base}/pwtool.keys

# db home dir
db_dir=${catalina.base}/cloudCtrlDb

# worker shared secret, either plaintext password or password encoded by pwtool can be used
worker_auth_token=2WorkerToken!

# client shared secret, either plaintext password or password encoded by pwtool can be used
client_auth_token=3ClientToken!

# to support older client that cannot set client_auth_token, you can allow connections from client without any token set
# connections from clients with configured but incorrect secret key would be rejected
# this property doesn't works for v2 endpoints. It's available for old (v1) endpoints only.
allow_insecure_clients_with_empty_token=false

# job storage dir
job_file_dir=${catalina.base}/jobFiles
# max file size (MB) allowed to be uploaded to the controller from clients or workers (eg. log files/result files/job files)
max_upload_size=10240

# SMTP server host name:
smtp_host=localhost
# SMTP server port number:
smtp_port=25

# if set to true, use SSL for connections to SMTP server; otherwise SSL is not used (the default)
#smtp_ssl=false

# if set to true, use STARTTLS protocol command (Opportunistic SSL/TLS (aka Explicit SSL/TLS)) to inform SMTP server
# that the email client wants to upgrade from an insecure connection to a secure connection using SSL/TLS.
#use_starttls=false

# if set to false, SMTP server certificate is always trusted; otherwise the certificate trust is based on certification path (the default)
#smtp_ssl_check_trust=true
# if set to false, SMTP server identity is not checked; otherwise the server identity is checked as specified by RFC 2595 (the default)
#smtp_ssl_check_server_identity=true

# If your SMTP server requires authentication uncomment both smtp_auth_user and smtp_auth_pass properties
#   and give them proper values, otherwise leave both properties commented,
#   either plaintext password or password encoded by pwtool can be used in smtp_auth_pass
#smtp_auth_user=
#smtp_auth_pass=

# Sender's email address:
from_email=changeme@yourcompanyname.com

# time after finished job expires (hours) and is candidate for cleanup
job_expiry_delay=168

# time after non-communicating worker become stale (seconds);
# should be larger than worker_sleep_interval and worker_jobwatcher_interval
# defined for any worker
worker_stale_delay=60
# time after non-communicating worker become inactive (minutes)
# and all its unfinished jobs are marked as faulted;
# should be much larger than worker_stale_delay (note it uses different time units)
worker_inactive_delay=60
# time after non-communicating worker expires (hours) and is candidate for cleanup
worker_expiry_delay=168

# how often cleanup of expired jobs and workers is run (minutes)
cleanup_period=60

# ssc url
ssc_url=http://fortify-ssc:8080/ssc
# ssc lockdown mode
ssc_lockdown_mode=false
# ssc shared secret, either plaintext password or password encoded by pwtool can be used
ssc_scancentral_ctrl_secret=1ServerSecret!

# pool mapping mode; value must be DISABLED when used with SSC release older then 16.20;
# available values:
# - DISABLED:   client can request any pool, mapping from app. version to pool by SSC is never requested
# - ENABLED:    client can request any pool, mapping from app. version to pool by SSC is requested
# - ENFORCED:   client cannot request pool, mapping from app. version to pool by SSC is requested
# if ssc_lockdown_mode is enabled the value of pool_mapping_mode from configuration file is ignored and set to ENFORCED automatically
pool_mapping_mode=disabled

# this server url
this_url=http://scancentral-sast:8080/scancentral-ctrl

# configure allowed remote IP address for SSC, only requests with matching remote IP address will be allowed
# (default is IP address resoled from ssc_url)
# set this if CS controller accesses SSC via reverse proxy server
# value can be comma separated IP addresses or CIDR network ranges
ssc_remote_ip=172.50.0.1

# HTTP header where the SSC remote IP is looked up if ssc_remote_ip_trusted_proxies_range is set
# (default is X-FORWARDED-FOR)
ssc_remote_ip_header=
# configure addresses of trusted proxy servers used to access CS controller
# if the request came from trusted proxy address, SSC remote IP is resolved from HTTP header set by ssc_remote_ip_header
# (default is disabled - meaning ssc_remote_ip_header is never used to retrieve SSC remote IP address)
# set this if SSC is accessing CS controller via (reverse) proxy server
# value can be comma separated IP addresses or CIDR network ranges
ssc_remote_ip_trusted_proxies_range=

# ScanCentral client Zip location. It is downloaded by clients to be updated remotely.
# Property is not expected to be modified.
client_zip_location=${catalina.base}/client/scancentral.zip

# ScanCentral client auto update.
# If enabled ScanCentral clients with version less than controller one will download updates from controller.
# If disabled ScanCentral controller will not send updates to clients.
client_auto_update=true

# If the option is set to true, before it assigns the job to a sensor, the Controller tries to validate the
# uptoken, application name and version, or version id (SSC Upload Data) for job.
# If SSC Upload Data went invalid before the job is assigned to sensor, the scan does not run and the job is faulted.
# If the option is set to false, before it assigns the job to a sensor, the Controller does not validate the SSC Upload Data for job.
# If the option is set to false and SSC Upload Data went invalid before the job is assigned to sensor, the scan can finish successfully but job upload to SSC will fail.
fail_job_if_ssc_upload_data_invalid=true

# List of email addresses to allow
# Valid value examples
# *@yourcompanyname.com
# *@*yourcompanyname.com
# a*@yourcompanyname.com
# name@yourcompanyname.com
# To specify multiple values, use ,(comma), :(colon) or ;(semicolon) as a delimiter
email_allow_list=

# List of email addresses to deny
# Valid value examples:
# *@yourcompanyname.com
# *@*yourcompanyname.com
# a*@yourcompanyname.com
# name@yourcompanyname.com
# To specify multiple values, use ,(comma), :(colon) or ;(semicolon) as a delimiter
email_deny_list=

# Timeout (minutes) for scan
# Use an integer greater than 0 (zero) to specify the timeout for the scan. The timeout for the scan is not set, by default.
# The value is set for all sensors associated with the Controller.
scan_timeout=

# Set to true to accept the job when no sensor with required capabilities (SCA version or .NET framework version) is available
# Set to false to reject the job when no sensor with required capabilities (SCA version or .NET framework version) is available
accept_job_when_no_sensor_available=true

# Configure LIM license configuration for SCA scan
# If no data is configured for any of LIM option, Sensors will try to use fortify.license file
lim_server_url=http://fortify-lim/LimService
lim_license_pool=sast
# LIM license pool password. You can either use a plaintext password, or use the pwtool to encrypt this password.
lim_license_pool_password=0PoolToken!
# To access the LIM server when the sensor is behind a proxy, configure the proxy server.
lim_proxy_url=
# LIM License proxy user. You can either use a plaintext value, or use the pwtool to encrypt this value.
lim_proxy_user=
# LIM license proxy password. You can either use a plaintext password, or use the pwtool to encrypt this password.
lim_proxy_password=
